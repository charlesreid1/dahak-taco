from os.path import join, isfile
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
HTTP = HTTPRemoteProvider()

data_dir = config['data_dir']
readfilt = config['read_filtering']

read_data_files = []
read_data_urls = []
for filename in readfilt['read_files'].keys():
    read_data_files.append(join(data_dir,filename))
    read_data_urls.append( readfilt['read_files'][filename] )


rule download_reads:
    """
    Fetch files from OSF containing reads that will be used 
    in the read filtering process.

    See fetch_reads.md
    """
    input:
        HTTP.remote(expand("{url}", url=read_data_urls, keep_local=True))
    output:
        read_data_files
    message: '''--- Downloading Data.'''
    run:
        for (osf_file,osf_url) in zip(read_data_files,read_data_urls):
            if(not isfile(osf_file)):
                shell('''
                    wget -O {osf_file} {osf_url}
                ''')


# There should only be one adapter file
adapter_file = join(data_dir, list(readfilt['adapter_file'].keys()  )[0])
adapter_url  = join(data_dir, list(readfilt['adapter_file'].values())[0])

rule download_read_adapter:
    """
    Download FASTA read adapaters.
    This downloads adpaters for 
    the TruSeq2-PE sequencer by default.

    See fetch_reads.md
    """
    output: 
        HTTP.remote(expand("{url}", url=adapter_url))
    message: '''--- Downloading adapter.'''
    run:
        if(not os.path.isfile(adapterfile)):
            shell('''
                wget -O {adapterfile} {adapterurl}
            ''')


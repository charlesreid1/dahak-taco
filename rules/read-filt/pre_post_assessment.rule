include: "trimming.settings"

import re
from os.path import join, dirname

data_dir = config['data_dir']

# The substitution pattern could potentially
# be parameterized, but let's not go overboard
pre_trimming_input  = join(data_dir, config['reads']['read_patterns']['pre_trimming_pattern'])
pre_trimming_output = re.sub('.fq.gz', '_fastqc.zip', pre_trimming_input)

rule pre_trimming_quality_assessment:
    input:
        pre_trimming_input
    output: 
        pre_trimming_output
    singularity: 'docker://brooksph/fastqc:latest'
    threads: 2
    run:
        output_dir = dirname(output)
        if(not isfile(output)):
            shell('''
                fastqc -t {threads} {input} -o {output_dir}
            ''')

post_trimming_input  = join(data_dir, config['reads']['read_patterns']['post_trimming_pattern'])
post_trimming_output = re.sub('.fq.gz', '_fastqc.zip', post_trimming_input)

rule post_trimming_quality_assessment:
    input:
        post_trimming_input
    output:
        post_trimming_output
    message: '''--- Quality check of trimmed data with Fastqc.'''
    singularity: 'docker://brooksph/fastqc:latest'
    threads: 2 
    run:
        output_dir = dirname(output)
        if(not isfile(output)):
            shell('''
                fastqc -t {threads} {input} -o {output_dir}
            ''')


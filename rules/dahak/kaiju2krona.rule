include: "biocontainers.settings"
include: "kaiju.settings"
include: "kaiju2krona.settings"

# needs, but does not set, 
# data_dir

data_dir = config['data_dir']

kaiju_dmp1   = config['kaiju']['dmp1']
kaiju_dmp2   = config['kaiju']['dmp2']
kaiju_fmi    = config['kaiju']['fmi']

# name of kaiju output determines name of kaiju2krona input
run_kaiju_output = config['kaiju']['out']

quayurl = config['biocontainers']['kaiju']['quayurl'] + ":" + config['biocontainers']['kaiju']['version']


# ---


kaiju2krona_input = [join(data_dir,d) for d in [kaiju_dmp1, kaiju_dmp2, run_kaiju_output]]

kaiju2krona_output = re.sub('\.out','\.kaiju_out_krona',run_kaiju_output)

rule kaiju2krona:
    """
## Rule: Kaiju to Krona 

Convert kaiju results to krona results,
and generate a report.

Simple workflow configuration:

```
$ cat kaiju2krona.json
{
    'workflow_target' : 'kaiju2krona'
}

Run the workflow:

```
$ ./taco -d kaiju2krona # dry run

$ ./taco kaiju2krona 
```

Override parameters examples:

(Note: kaiju2krona does not have any parameters itself,
but utilizes kaiju parameters.)

```
$ cat kaiju2krona-params.json
{
    'kaiju' : {
        'dmp1' : 'nodes.dmp',
        'dmp2' : 'names.dmp',
        'fmi'  : 'kaiju_db_nr_euk.fmi',
        'tar'  : 'kaiju_index_nr_euk.tgz',
        'url'  : 'http://kaiju.binf.ku.dk/database',
        'out'  : '{base}.kaiju_output.trim{ntrim}.out'
    },
    'biocontainers' : {
        'sourmash' : '2.0.0a2--py36_0'
    }
}

$ ./taco -d kaiju2krona kaiju2krona-params # dry run

$ ./taco kaiju2krona kaiju2krona-params
```

This rule is defined in `rules/dahak/kaiju2krona.rule`.

This rule includes `biocontainers.settings`, `kaiju.settings`, `kaiju2krona.settings`
```
    """
    input:
        kaiju2krona_input
    output:
        kaiju2krona_output
    run:
        kaiju2krona_in_name_wc = run_kaiju_output.format(**wildcards)
        kaiju2krona_output_name_wc = kaiju2krona_output.format(**wildcards)
        # NOTE:
        # the -u stat is an attempt to keep kaiju2krona 
        # from creating output files owned by root (???)
        shell('''
            docker run \
                    -u `stat -c "%u:%g" {PWD}` \
                    -v {PWD}/{data_dir}:/data \
                    {quayurl} \
                    kaiju2krona \
                    -v \
                    -t /data/{kaiju_dmp1} \
                    -n /data/{kaiju_dmp2} \
                    -i /data/{kaiju2krona_in_name_wc} \
                    -o /data/{kaiju2krona_output_name_wc}
        ''')



kaiju2kronasummary_input = [join(data_dir,d) for d in [kaiju_dmp1, kaiju_dmp2, run_kaiju_output]]

kaiju2kronasummary_output = re.sub('\.out','\.kaiju_out_krona.summary',run_kaiju_output)

rule kaiju2kronasummary:
    """
    Convert kaiju results to krona results,
    and generate a report.
    """
    input:
        kaiju2kronasummary_input
    output:
        kaiju2kronasummary_output
    run:
        kaiju2kronasummary_in_wc = run_kaiju_output.format(**wildcards)
        kaiju2kronasummary_output_wc = kaiju2kronasummary_output.format(**wildcards)
        shell('''
            docker run \
                    -u `stat -c "%u:%g" {PWD}` \
                    -v {PWD}/{data_dir}:/data \
                    {quayurl} \
                    kaijuReport \
                    -v \
                    -t /data/{kaiju_dmp1} \
                    -n /data/{kaiju_dmp2} \
                    -i /data/{kaiju2kronasummary_in_wc} \
                    -r genus \
                    -o /data/{kaiju2kronasummary_output_wc}
        ''')

